<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">
	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
	</PropertyGroup>
	
	<ItemGroup>
		<Compile Include="Counter.fs" />
		<Compile Include="DialogDemo.fs" />
		<Compile Include="App.fs" />
		<Compile Include="Startup.fs" />
	</ItemGroup>
	
	<ItemGroup>
		<PackageReference Include="Fun.Blazor.Wasm" Version="3.0.*" />
		<PackageReference Include="Fun.Blazor.HotReload" Version="3.0.*" Condition="'$(Configuration)'=='DEBUG'" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="7.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="7.0.3" PrivateAssets="all" />
	</ItemGroup>
	
	<ItemGroup>
		<ProjectReference Include="..\WASMMudBlazor.Controls\WASMMudBlazor.Controls.fsproj" />
	</ItemGroup>

	<!-- If you want to add package like below to trim package which is not trimmable by default, be sure you test it carefully -->
	<Target Name="ConfigureTrimming" BeforeTargets="PrepareForILLink">
		<ItemGroup>
			<ManagedAssemblyToLink Condition="'%(Filename)' == 'FSharp.Data'">
				<IsTrimmable>true</IsTrimmable>
			</ManagedAssemblyToLink>
			<ManagedAssemblyToLink Condition="'%(Filename)' == 'MessagePack'">
				<IsTrimmable>true</IsTrimmable>
			</ManagedAssemblyToLink>
		</ItemGroup>
	</Target>

	<!-- In dotnet 7 there is a bug for Fun.Blazor.Cli to do hot reload.
    Below is the workaround. https://github.com/dotnet/fsharp/issues/14250 -->
    <Target Name="ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies"
			BeforeTargets="CoreCompile"
			Condition="'@(ReferencePathWithRefAssemblies)' == ''">
        <ItemGroup>
            <ReferencePathWithRefAssemblies Include="@(ReferencePath)" />
        </ItemGroup>
    </Target>	
</Project>